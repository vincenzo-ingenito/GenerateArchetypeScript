# Controlla se la cartella "general-archetype" esiste e cancellala se presente
if (Test-Path -Path "general-archetype") {
    Write-Host "Removing existing 'general-archetype' folder..."
    Remove-Item -Path "general-archetype" -Recurse -Force
}

Write-Host "Git clone"
git clone https://github.com/vincenzo-ingenito/general-archetype.git
Write-Host "Change folder general-archetype"
Set-Location -Path "general-archetype"
Write-Host "Generazione archetipo"
mvn archetype:create-from-project
Set-Location -Path "target/generated-sources/archetype"

# Modifica il file pom.xml per cambiare il packaging
$filePath = "pom.xml"
$oldString = "<packaging>maven-archetype</packaging>"
$newString = "<packaging>pom</packaging>"
(Get-Content -Path $filePath) | ForEach-Object {
    $_ -replace [regex]::Escape($oldString), $newString
} | Set-Content -Path $filePath

# Esegui 'clean install' per l'archetipo
Write-Host "Running 'clean install' for the archetype..."
mvn clean install
Write-Host "Run install"
mvn clean install
Write-Host "aggiorno indice catalogo locale"
mvn archetype:crawl
Write-Host "Genero progetto da archetipo"

# Richiedi il groupId e il nome dell'artifact
$groupId = Read-Host -Prompt "Inserisci il groupId: "
$artifactName = Read-Host -Prompt "Inserisci il nome dell'artifact: "
mvn archetype:generate -DarchetypeCatalog=local -DgroupId="$groupId" -DartifactId="$artifactName"
Set-Location -Path $artifactName
git init
git add .
git commit -m "Inizializzo il nuovo progetto Spring Boot" 

# Richiedi l'URL del repository remoto
$remoteUrl = Read-Host -Prompt "Inserisci l'URL del repository remoto: "
git remote add origin $remoteUrl
git push -u origin main

# Se tutto va bene, stampa il messaggio di successo e attendi l'input dell'utente
Read-Host -Prompt "Progetto Spring Boot $artifactName creato e pushato con successo! Premi INVIO per continuare."
